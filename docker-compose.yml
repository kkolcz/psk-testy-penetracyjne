services:
  vulnerable_services:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vulnerable_services
    ports:
      - '2222:22'
      - '8080:80'
    restart: always
    volumes:
      - ./files/app_files:/home/kowalski/app_files:rw
      - uploads:/var/www/html/uploads:rw

  angular_frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: angular_frontend
    ports:
      - '8081:80'
    restart: always

  aspnet_backend:
    container_name: aspnet_backend
    build:
      context: ./API/API
      dockerfile: Dockerfile
    ports:
      - '8082:8080'
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=db;Database=TestyPen;User=sa;Password=Password123!;MultipleActiveResultSets=true;TrustServerCertificate=true
      - FileUploadSettings__StoragePath=/app/uploads
    volumes:
      - uploads:/app/uploads

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - '1433:1433'
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123!
      - MSSQL_PID=Express
    volumes:
      - sqldata:/var/opt/mssql
    restart: always

  adminer:
    image: adminer
    ports:
      - '8090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=db
    restart: always

volumes:
  sqldata:
  uploads:
